workflow:
  rules:
    - if: $CI_COMMIT_BRANCH  == "dev"
    - if: $CI_COMMIT_BRANCH == "prod"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "web"

stages:
- build
- test
- manual
- deploy

.defaults: 
  tags:
    - docker
    - cloud

python_build:
  extends: .defaults
  stage: build
  image:  ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/python:3.9
  script:
    - >
      if [[ "${CI_COMMIT_REF_NAME}" =~ ^(release$|dev) ]]; then
        sed -i "s#\.dev0#rc${CI_PIPELINE_ID}#g" futureexpert/__about__.py
      elif [[ "${CI_COMMIT_TAG}" =~ ^release-.+ ]]; then
        sed -i "s#\.dev0##g" futureexpert/__about__.py
      else
        sed -i "s#\.dev0#\.dev${CI_PIPELINE_ID}#g" futureexpert/__about__.py
      fi
    - python setup.py sdist bdist_wheel
  artifacts:
    paths:
    - "dist/"
    expire_in: 1 week

import-formatting:  
  stage: test
  extends: .defaults
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/python:3.9
  script:
    - pip config set global.index-url ${PROGNOSTICA_PYPI}
    - pip install isort
    - isort --check-only .

static-typing:
  stage: test
  extends: .defaults
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/python:3.9
  script:
    - pip config set global.index-url ${PROGNOSTICA_PYPI}
    - pip install .[dev] # [dev] required for stubs dependencies!
    - mypy futureexpert

  
unit-tests:  
  stage: test
  extends: .defaults
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/python:3.9
  script:
    - pip config set global.index-url ${PROGNOSTICA_PYPI}
    - pip install .[dev] # [dev] required for stubs dependencies!
    - pip install pytest
    - pytest

notebook execution (required):
  stage: manual
  extends: .defaults
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/python:3.9
  when: manual
  variables:
    FUTURE_PW: $CI_TEST_PW
    FUTURE_USER: $CI_TEST_USER
    FUTURE_GROUP: $CI_TEST_GROUP
    FUTURE_ENVIRONMENT: development
  script:
    - pip install jupyter==1.0.0 nbconvert==7.2.6 .
    - for notebook in `find . -name '*.ipynb'`; do jupyter nbconvert --to notebook --execute --inplace $notebook; done
  needs: [python_build]


python_deploy:
  stage: deploy
  extends: .defaults  
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/python:3.9
  script:
    - pip config set global.index-url ${PROGNOSTICA_PYPI}
    - pip install -U twine
    - python -m twine check dist/*
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_PROJECT_PYPI} dist/* --verbose
  when: manual
