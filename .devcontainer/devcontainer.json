// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.234.0/containers/docker-existing-dockerfile
{
	"name": "expert api",
	"build": {
		"dockerfile": "Dockerfile",
		"context": "..",
		"args": { 
			// Update 'VARIANT' to pick a Python version: 3, 3.10, 3.9, 3.8, 3.7, 3.6
			// Append -bullseye or -buster to pin to an OS version.
			// Use -bullseye variants on local on arm64/Apple Silicon.
			"VARIANT": "3.9-bullseye",
			// Options
			"NODE_VERSION": "none",
			"PROGNOSTICA_PYPI": "${localEnv:PROGNOSTICA_PYPI}"
		}
	},
	// Configure tool-specific properties.
	"customizations": {
	// Configure properties specific to VS Code.
	"vscode": {
		// Set *default* container specific settings.json values on container create.
	// Set *default* container specific settings.json values on container create.
	"settings": {"python.defaultInterpreterPath": "/usr/local/bin/python",
	"python.linting.enabled": true,
	"python.linting.pylintEnabled": true,
	"python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
	"python.formatting.blackPath": "/usr/local/py-utils/bin/black",
	"python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
	"python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
	"python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
	"python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
	"python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
	"python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
	"python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
	"sonarlint.ls.javaHome": "/usr/lib/jvm/java-11-openjdk-amd64",
	"python.experiments.optOutFrom": ["All"]},
	
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": ["ms-python.python",
	"ms-python.vscode-pylance",
	"gruntfuggly.todo-tree",
	"sonarsource.sonarlint-vscode"]

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
	},

	"remoteUser": "vscode",
	"features": {
		"git": "os-provided"
	}	
}
